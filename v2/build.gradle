plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.openjfx.javafxplugin'
}

group 'com.github.mrbean355'
version '2.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.3.4"
    implementation 'no.tornado:tornadofx:1.7.20'
    implementation "io.ktor:ktor-server-netty:1.3.1"
    implementation "io.ktor:ktor-gson:1.3.1"
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.7.2'
    implementation 'com.vdurmont:semver4j:3.1.0'

    runtimeOnly "org.openjfx:javafx-graphics:${javafx.version}:win"
    runtimeOnly "org.openjfx:javafx-graphics:${javafx.version}:linux"
    runtimeOnly "org.openjfx:javafx-graphics:${javafx.version}:mac"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

javafx {
    version = "12.0.2"
    modules = ['javafx.controls', 'javafx.media']
}

mainClassName = 'com.github.mrbean355.admiralbulldog.SoundsApplicationKt'

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

task generateBuildConfig() {
    final file = project.file("src/main/kotlin/com/github/mrbean355/admiralbulldog/BuildConfig.kt")
    file.createNewFile()
    file.write("package com.github.mrbean355.admiralbulldog\n" +
            "\n" +
            "@javax.annotation.processing.Generated(\"generateBuildConfig\")\n" +
            "val APP_VERSION = com.vdurmont.semver4j.Semver(\"$version\")\n")
}

compileKotlin.dependsOn(generateBuildConfig)
